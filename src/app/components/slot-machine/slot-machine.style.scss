.sm {

    &__base {
        --reelSize: 32px;
        --displaySize: 96px;
        --displayZoom: 2;

        position: relative;
        width: calc(100% - var(--reelSize));
        height: calc(100vh - var(--reelSize));
        max-height: calc(100vw - var(--reelSize));
        max-width: calc(100vh - var(--reelSize));
        box-sizing: border-box;
        pointer-events: none;
        transform-origin: left center;
        will-change: transform;

        &.has-zoom {
            transform: scale(var(--displayZoom));
        }
    }

    &__reelsContainer {
        position: relative;
        width: 100%;
        height: 100%;
    }

    &__reel {
        --i: 0;
        --bg: transparent;

        position: absolute;
        top: calc( var(--index) * var(--reelSize));
        left: calc( var(--index) * var(--reelSize));
        width: calc(100% - var(--index) * 2 * var(--reelSize));
        height: calc(100% - var(--index) * 2 * var(--reelSize));
        background: var(--bg);
        border-radius: 100%;
        overflow: hidden;
        box-shadow: 0 0 var(--reelSize) 0 rgba(0,0,0,.125);
        will-change: transform;

        &:first-child,
        &:last-child {
            box-shadow: none;
        }
    }

    &__cell {
        position: absolute;
        height: var(--reelSize);
        line-height: var(--reelSize);
        font-size: calc(var(--reelSize) / 2);
        top: 50%;
        left: 0;
        width: 50%;
        margin-top: calc(var(--reelSize) / -2);
        transform-origin: center right;

        &--shadow {
            filter: blur(2px);
            transition: opacity linear .125s;

            // TODO: These could be calculated dynamically with JS:

            &-1 { opacity: .5; }

            &-2 { opacity: .4; }

            &-3 { opacity: .3; }

            &-4 { opacity: .2; }

            &-5 { opacity: .1; }

            .is-stop & {
                opacity: 0;
            }
        }
    }

    &__figure {
        display: inline-block;
        text-align: center;
        width: var(--reelSize);
    }

    &__display {

        position: absolute;
        top: 50%;
        left: 0;
        width: var(--displaySize);
        height: var(--reelSize);
        margin-top: calc(var(--reelSize) / -2);

        &--background {
            z-index: -1;
            // Not actually used.
        }

        &--shadow {
            box-shadow: 0 calc(var(--reelSize) / 2) var(--reelSize) calc(var(--reelSize) / -8) rgba(0,0,0,.25);
            border-radius: 0 0 2px 2px; // Bottom only
        }
    }
}
